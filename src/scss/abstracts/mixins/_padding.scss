// Mixin for setting padding
//
// Usage:
//
// div {
//     @include padding($gutter--lg, top, right, bottom);
// }
//
// Output:
//
// div {
//     padding-top: $gutter--lg;
//     padding-right: $gutter--lg;
//     padding-bottom: $gutter--lg;
//
//     @include break--md {
//         padding-top: $gutter--lg/2;
//         padding-right: $gutter--lg/2;
//         padding-bottom: $gutter--lg/2;
//     }
//
//     @include break--sm {
//         padding-top: $gutter--lg/4;
//         padding-right: $gutter--lg/4;
//         padding-bottom: $gutter--lg/4;
//     }
// }
//
//
// If you want to add padding on all sides of an element, just leave out the sides in the mixin:
//
// div {
//     @include padding($gutter--lg);
// }
//
// Output:
//
// div {
//     padding: $gutter--lg;
//
//     @include break--md {
//         padding: $gutter--lg/2;
//     }
//
//     @include break--sm {
//         padding: $gutter--lg/4;
//     }
// }
//
//
// If you want to make use of the default padding set in the mixin, just use:
// Note: The default padding in the mixin is set to $gutter--xlg (defined in _config.scss).
//
// div {
//     @include padding();
// }
//
// Output:
//
// div {
//     padding: $gutter--xlg;
//
//     @include break--md {
//         padding: $gutter--xlg/2;
//     }
//
//     @include break--sm {
//         padding: $gutter--xlg/4;
//     }
// }


@mixin padding($size:$gutter--xlg, $sides...) {

    @if $sides == () {
        padding: $size;

        @include break--md {
            padding: $size/2;
        }

        @include break--sm {
            padding: $size/4;
        }

    } @else {

        @each $side in $sides {
            padding-#{$side}: $size;
        }

        @include break--md {
            @each $side in $sides {
                padding-#{$side}: $size/2;
            }
        }

        @include break--sm {
            @each $side in $sides {
                padding-#{$side}: $size/4;
            }
        }
    }
}
